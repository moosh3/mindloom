"""Fix relationships between users and teams

Revision ID: a1d5e7f77afd
Revises: ec7de2feabf4
Create Date: 2025-04-29 14:11:43.581063

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a1d5e7f77afd'
down_revision: Union[str, None] = 'ec7de2feabf4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('content_buckets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('bucket_type', sa.String(length=50), nullable=False),
    sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('embedder_config', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('vector_db_config', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_content_buckets_bucket_type'), 'content_buckets', ['bucket_type'], unique=False)
    op.create_index(op.f('ix_content_buckets_name'), 'content_buckets', ['name'], unique=False)
    op.create_table('file_metadata',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('s3_bucket', sa.String(length=255), nullable=False),
    sa.Column('s3_key', sa.String(length=1024), nullable=False),
    sa.Column('content_type', sa.String(length=100), nullable=True),
    sa.Column('size_bytes', sa.BigInteger(), nullable=True),
    sa.Column('last_modified', sa.DateTime(), nullable=False),
    sa.Column('bucket_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['bucket_id'], ['content_buckets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_file_metadata_last_modified'), 'file_metadata', ['last_modified'], unique=False)
    op.create_index(op.f('ix_file_metadata_s3_key'), 'file_metadata', ['s3_key'], unique=False)
    op.create_table('agent_content_bucket_association',
    sa.Column('agent_id', sa.UUID(), nullable=False),
    sa.Column('content_bucket_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['content_bucket_id'], ['content_buckets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('agent_id', 'content_bucket_id')
    )
    op.add_column('agents', sa.Column('instructions', sa.Text(), nullable=True))
    op.add_column('agents', sa.Column('llm_config', sa.JSON(), nullable=True))
    op.add_column('agents', sa.Column('knowledge_config', sa.JSON(), nullable=True))
    op.add_column('agents', sa.Column('storage_config', sa.JSON(), nullable=True))
    op.add_column('agents', sa.Column('agent_config', sa.JSON(), nullable=True))
    op.add_column('agents', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('agents', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.drop_column('agents', 'temperature')
    op.drop_column('agents', 'model_provider')
    op.drop_column('agents', 'model_name')
    op.add_column('runs', sa.Column('runnable_id', sa.UUID(), nullable=False))
    op.add_column('runs', sa.Column('runnable_type', sa.String(length=50), nullable=False))
    op.create_index(op.f('ix_runs_runnable_id'), 'runs', ['runnable_id'], unique=False)
    op.create_index(op.f('ix_runs_runnable_type'), 'runs', ['runnable_type'], unique=False)
    op.drop_constraint('runs_agent_id_fkey', 'runs', type_='foreignkey')
    op.drop_column('runs', 'agent_id')
    op.add_column('teams', sa.Column('mode', sa.JSON(), nullable=True))
    op.add_column('teams', sa.Column('instructions', sa.Text(), nullable=True))
    op.add_column('teams', sa.Column('llm_config', sa.JSON(), nullable=True))
    op.add_column('teams', sa.Column('knowledge_config', sa.JSON(), nullable=True))
    op.add_column('teams', sa.Column('storage_config', sa.JSON(), nullable=True))
    op.add_column('teams', sa.Column('team_config', sa.JSON(), nullable=True))
    op.add_column('teams', sa.Column('enable_memory', sa.Boolean(), nullable=False))
    op.add_column('teams', sa.Column('history_length', sa.Integer(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('teams', 'history_length')
    op.drop_column('teams', 'enable_memory')
    op.drop_column('teams', 'team_config')
    op.drop_column('teams', 'storage_config')
    op.drop_column('teams', 'knowledge_config')
    op.drop_column('teams', 'llm_config')
    op.drop_column('teams', 'instructions')
    op.drop_column('teams', 'mode')
    op.add_column('runs', sa.Column('agent_id', sa.UUID(), autoincrement=False, nullable=False))
    op.create_foreign_key('runs_agent_id_fkey', 'runs', 'agents', ['agent_id'], ['id'])
    op.drop_index(op.f('ix_runs_runnable_type'), table_name='runs')
    op.drop_index(op.f('ix_runs_runnable_id'), table_name='runs')
    op.drop_column('runs', 'runnable_type')
    op.drop_column('runs', 'runnable_id')
    op.add_column('agents', sa.Column('model_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('agents', sa.Column('model_provider', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.add_column('agents', sa.Column('temperature', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.drop_column('agents', 'updated_at')
    op.drop_column('agents', 'created_at')
    op.drop_column('agents', 'agent_config')
    op.drop_column('agents', 'storage_config')
    op.drop_column('agents', 'knowledge_config')
    op.drop_column('agents', 'llm_config')
    op.drop_column('agents', 'instructions')
    op.drop_table('agent_content_bucket_association')
    op.drop_index(op.f('ix_file_metadata_s3_key'), table_name='file_metadata')
    op.drop_index(op.f('ix_file_metadata_last_modified'), table_name='file_metadata')
    op.drop_table('file_metadata')
    op.drop_index(op.f('ix_content_buckets_name'), table_name='content_buckets')
    op.drop_index(op.f('ix_content_buckets_bucket_type'), table_name='content_buckets')
    op.drop_table('content_buckets')
    # ### end Alembic commands ###
