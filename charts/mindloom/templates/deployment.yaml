apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mindloom.fullname" . }}
  labels:
    {{- include "mindloom.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mindloom.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mindloom.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mindloom.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          # Add liveness/readiness probes here if needed
          # livenessProbe:
          #   httpGet:
          #     path: /healthz # Assuming a health check endpoint exists
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /readyz # Assuming a readiness check endpoint exists
          #     port: http
          {{- with .Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            {{- range $name, $cfg := .Values.envValueFrom }}
            - name: {{ $name }}
              valueFrom:
                {{- if $cfg.secretKeyRef }}
                secretKeyRef:
                  name: {{ $cfg.secretKeyRef.name | quote }}
                  key: {{ $cfg.secretKeyRef.key | quote }}
                {{- else if $cfg.configMapKeyRef }}
                configMapKeyRef:
                  name: {{ $cfg.configMapKeyRef.name | quote }}
                  key: {{ $cfg.configMapKeyRef.key | quote }}
                {{- end }}
            {{- end }}
            {{- range $key, $value := .Values.environment }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
