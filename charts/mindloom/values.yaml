# Default values for mindloom chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: mindloom/backend # Replace with your actual image registry/repository
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets:
  - name: ghcr-creds # Default name, change if you used a different secret name

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000 # Port the service listens on
  targetPort: 8000 # Port the backend container listens on

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# --- Configuration --- #
# Environment variables passed to the backend container
environment:
  # Database connection (references postgresql-pgvector subchart)
  DATABASE_URL: "postgresql+asyncpg://postgres:postgres@pgvector:5432/mindloom_db"
  # Redis connection (references redis subchart)
  REDIS_URL: "redis://:$(REDIS_PASSWORD)@{{ printf \"%s-redis-master\" .Release.Name }}:6379/0"
  # MinIO/S3 connection (references minio subchart)
  S3_ENDPOINT_URL: "http://{{ printf \"%s-minio\" .Release.Name }}:9000"
  S3_BUCKET_NAME: "mindloom-{{ .Release.Name }}" # Example bucket name, adjust as needed

envFrom:
  - secretRef:
      name: "{{ printf \"%s-postgresql-pgvector\" .Release.Name }}" # Assumes secret name matches service
  - secretRef:
      name: "{{ printf \"%s-redis\" .Release.Name }}" # Assumes secret name follows pattern
  - secretRef:
      name: "{{ printf \"%s-minio\" .Release.Name }}" # Assumes secret name matches service

envValueFrom:
  POSTGRES_PASSWORD:
    secretKeyRef:
      name: "{{ printf \"%s-postgresql-pgvector\" .Release.Name }}"
      key: postgres-password # Default key in Bitnami postgresql secret
  REDIS_PASSWORD:
    secretKeyRef:
      name: "{{ printf \"%s-redis\" .Release.Name }}"
      key: redis-password # Default key in Bitnami redis secret
  AWS_ACCESS_KEY_ID: # S3 Access Key for MinIO
    secretKeyRef:
      name: "{{ printf \"%s-minio\" .Release.Name }}"
      key: rootUser # Key for access key in MinIO secret
  AWS_SECRET_ACCESS_KEY: # S3 Secret Key for MinIO
    secretKeyRef:
      name: "{{ printf \"%s-minio\" .Release.Name }}"
      key: rootPassword # Key for secret key in MinIO secret

# --- Dependencies --- #
# Enable/disable and configure dependency charts here.
# Refer to the respective dependency chart's values.yaml for detailed configuration options.

postgresql-pgvector:
  enabled: true # Enable the postgresql-pgvector subchart
  auth:
    database: mindloom_db
    username: postgres
    password: "postgres"

redis:
  enabled: true # Enable the redis subchart
  auth:
    password: "changeme-redis"

minio:
  enabled: true # Enable the minio subchart
  auth:
    rootUser: minioadmin
    rootPassword: "changeme-minio"
